Функция СведенияОВнешнейОбработке () Экспорт
	
	// Объявим переменную, в которой мы сохраним и вернем "наружу" необходимые данные 
	ПараметрыРегистрации = Новый Структура; 
	
	// Объявим еще одну переменную, которая нам потребуется ниже 
	МассивНазначений = Новый Массив; 
	
	// Первый параметр, который мы должны указать - это какой вид обработки системе должна зарегистрировать. 
	// Допустимые типы: ДополнительнаяОбработка, ДополнительныйОтчет, ЗаполнениеОбъекта, Отчет, ПечатнаяФорма, СозданиеСвязанныхОбъектов 
	ПараметрыРегистрации.Вставить("Вид", "ДополнительнаяОбработка"); 
	
	// Теперь нам необходимо передать в виде массива имен, к чему будет подключена наша ВПФ 
	// Имейте ввиду, что можно задать имя в таком виде: Документ.* - в этом случае обработка будет подключена ко всем документам в системе, 
	// которые поддерживают механизм ВПФ 
	//МассивНазначений.Добавить("Документ.Заявка"); 
	
	// 
	
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений); 
	
	// Теперь зададим имя, под которым ВПФ будет зарегистрирована в справочнике внешних обработок 
	ПараметрыРегистрации.Вставить("Наименование", ЭтотОбъект.Метаданные().Синоним); 
	
	// Зададим право обработке на использование безопасного режима. Более подробно можно узнать в справке к платформе (метод УстановитьБезопасныйРежим) 
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина); 
	
	// Следующие два параметра играют больше информационную роль, т.е. это то, что будет видеть пользователь в информации к обработке 
	ПараметрыРегистрации.Вставить("Версия", "1.0"); 
	ПараметрыРегистрации.Вставить("Информация", ЭтотОбъект.Метаданные().Синоним); 
	
	// Создадим таблицу команд (подробнее смотрим ниже) 
	ТаблицаКоманд = ПолучитьТаблицуКоманд(); 
	//ТаблицаКоманд = Новый ТаблицаЗначений; 
	// Добавим команду в таблицу 
	ДобавитьКоманду(ТаблицаКоманд, ЭтотОбъект.Метаданные().Синоним, ЭтотОбъект.Метаданные().Синоним, "ОткрытиеФормы", Истина, "ОткрытьФорму");
	
	// Сохраним таблицу команд в параметры регистрации обработки 
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд); 
	
	// Теперь вернем системе наши параметры 
	Возврат ПараметрыРегистрации;
	
КонецФункции

Функция ПолучитьТаблицуКоманд() 
	
	Команды = Новый ТаблицаЗначений; 
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка")); 
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево")); 
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка")); 
	
	Возврат Команды; 
	
КонецФункции 


Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "") 
	
	НоваяКоманда = ТаблицаКоманд.Добавить(); 
	НоваяКоманда.Представление = Представление; 
	НоваяКоманда.Идентификатор = Идентификатор; 
	НоваяКоманда.Использование = Использование; 
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение; 
	НоваяКоманда.Модификатор = Модификатор; 
	
КонецПроцедуры

функция ВыполнитьКоманду(ИдентификаторКоманды,ПараметрыВыполнения)
	
КонецФункции	

